{"ast":null,"code":"var _jsxFileName = \"/Users/makahabutahoun/Clicky-Game/clicky/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport friends from \"./friends.json\";\nimport Header from \"./components/Header\";\nimport FriendCard from \"./components/FriendCard\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      score: 0,\n      topScore: 0,\n      message: \"Click on the images to play, Don't click on an image twice!\",\n      shakeit: \"false\",\n      clickedCards: []\n    };\n\n    this.cardClick = id => {\n      const shufflefriend = this.shufflefriend(friends);\n      this.setState({\n        friends: shufflefriend\n      });\n\n      if (this.state.clickedCards.includes(id)) {\n        this.setState({\n          score: 0,\n          clickedCards: [],\n          message: \"Click an image to start again!\",\n          shakeit: \"true\"\n        });\n      } else {\n        this.setState({\n          clickedCards: this.state.clickedCards.concat([id]),\n          score: this.state.score + 1,\n          shakeit: \"false\"\n        });\n      }\n\n      if (this.state.score > this.state.topScore) {\n        this.setState({\n          topScore: this.state.score\n        });\n      }\n    };\n  }\n\n  // componentDidMount() {\n  //   this.setState({ data: this.shufflefriend(this.state.data) });\n  // }\n  // resetData = data => {\n  //   const resetData = data.map(item => ({ ...item, clicked: false }));\n  //   return this.shufflefriend(resetData);\n  // };\n  // for the shuffle\n  shufflefriend(friends) {\n    for (var i = friends.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      [friends[i], friends[j]] = [friends[j], friends[i]];\n    }\n\n    return friends;\n  } // Shuffle = () => {\n  //   let shuffledFriends = randomFriends(friends);\n  //   this.setState({ friends: shuffledFriends });\n  // };\n\n\n  // gameover = () => {\n  //   if (this.state.score > this.state.topScore) {\n  //     this.setState({topscore: this.state.score}, function() {\n  //       console.log(this.state.topscore);\n  //     });\n  //   }\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Header, {\n      score: this.state.score,\n      topScore: this.state.topScore,\n      message: this.state.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"jumbotron pictureArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.friends.map(friend => React.createElement(FriendCard, {\n      id: friend.id,\n      key: friend.id,\n      name: friend.name,\n      image: friend.image,\n      onClick: this.cardClick.bind(this, friend.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/makahabutahoun/Clicky-Game/clicky/src/App.js"],"names":["React","Component","friends","Header","FriendCard","App","state","score","topScore","message","shakeit","clickedCards","cardClick","id","shufflefriend","setState","includes","concat","i","length","j","Math","floor","random","render","map","friend","name","image","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  './App.css';\nimport friends from \"./friends.json\"\nimport Header from \"./components/Header\";\nimport FriendCard from \"./components/FriendCard\";\n\n\nclass App extends Component {\n\n  state = {\n   friends,\n    score: 0,\n    topScore: 0,\n    message: \"Click on the images to play, Don't click on an image twice!\",\n    shakeit: \"false\",\n    clickedCards:[]\n  }\n  // componentDidMount() {\n  //   this.setState({ data: this.shufflefriend(this.state.data) });\n  // }\n\n  // resetData = data => {\n  //   const resetData = data.map(item => ({ ...item, clicked: false }));\n  //   return this.shufflefriend(resetData);\n    \n  // };\n// for the shuffle\nshufflefriend (friends){\n\n  for ( var i = friends.length - 1; i > 0; i--) {\n   var  j = Math.floor(Math.random() * (i + 1));\n    [friends[i], friends[j]] = [friends[j], friends[i]];\n  }\n  return friends;\n}   // Shuffle = () => {\n  //   let shuffledFriends = randomFriends(friends);\n  //   this.setState({ friends: shuffledFriends });\n  // };\n\n  cardClick = (id) => {\n    const shufflefriend = this.shufflefriend(friends);\n    this.setState({friends: shufflefriend});\n\n    if (this.state.clickedCards.includes(id)) {\n      this.setState({ score: 0, clickedCards: [], \n        message: \"Click an image to start again!\", shakeit: \"true\"});\n    }\n    else {\n      this.setState({\n        clickedCards: this.state.clickedCards.concat([id]),\n        score: this.state.score + 1,\n        shakeit: \"false\"\n      });\n    }\n  \n    if (this.state.score > this.state.topScore) {\n      this.setState({ topScore: this.state.score });\n    }\n  \n  }\n  \n    \n  // gameover = () => {\n  //   if (this.state.score > this.state.topScore) {\n  //     this.setState({topscore: this.state.score}, function() {\n  //       console.log(this.state.topscore);\n  //     });\n  //   }\n  \n\n\n\n \n   \n  render() {\n    return (\n      <div>\n      <Header \n        score={this.state.score} topScore={this.state.topScore} message={this.state.message}/>\n        <div className=\"jumbotron pictureArea\">\n          \n          {this.state.friends.map(friend => (\n            <FriendCard\n              id={friend.id}\n              key={friend.id}\n              name={friend.name}\n              image={friend.image}\n              onClick={this.cardClick.bind(this, friend.name)}\n            />\n          ))}\n        \n\n\n        </div>\n\n\n\n     </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}